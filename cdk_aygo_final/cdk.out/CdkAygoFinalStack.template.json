{
  "Resources": {
    "KeyPairEC2KeyPaircdkkeypairA709CCF7": {
      "Type": "Custom::EC2-Key-Pair",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "EC2KeyNameManagerLambdaBE629145",
            "Arn"
          ]
        },
        "Name": "cdk-keypair",
        "Description": "Key Pair created with CDK Deployment",
        "KmsPrivate": "alias/aws/secretsmanager",
        "KmsPublic": "alias/aws/secretsmanager",
        "StorePublicKey": false,
        "ExposePublicKey": false,
        "RemoveKeySecretsAfterDays": 0,
        "SecretPrefix": "ec2-ssh-key/",
        "StackName": "CdkAygoFinalStack",
        "Tags": {
          "CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/KeyPair/EC2-Key-Pair-cdk-keypair/Default"
      }
    },
    "EC2KeyPairManagerPolicyEBBC1576": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:DescribeKeyPairs",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:CreateKeyPair",
                "ec2:CreateTags"
              ],
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ec2:*:*:key-pair/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DeleteKeyPair",
                "ec2:DeleteTags"
              ],
              "Condition": {
                "StringLike": {
                  "ec2:ResourceTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ec2:*:*:key-pair/*"
                  ]
                ]
              }
            },
            {
              "Action": "secretsmanager:ListSecrets",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "secretsmanager:CreateSecret",
                "secretsmanager:TagResource"
              ],
              "Condition": {
                "StringLike": {
                  "aws:RequestTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "secretsmanager:DeleteResourcePolicy",
                "secretsmanager:DeleteSecret",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:GetSecretValue",
                "secretsmanager:ListSecretVersionIds",
                "secretsmanager:PutResourcePolicy",
                "secretsmanager:PutSecretValue",
                "secretsmanager:RestoreSecret",
                "secretsmanager:UntagResource",
                "secretsmanager:UpdateSecret",
                "secretsmanager:UpdateSecretVersionStage"
              ],
              "Condition": {
                "StringLike": {
                  "secretsmanager:ResourceTag/CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Used by Lambda CFN-Resource-Custom-EC2-Key-Pair, which is a custom CFN resource, managing EC2 Key Pairs",
        "ManagedPolicyName": "CdkAygoFinalStack-CFN-Resource-Custom-EC2-Key-Pair",
        "Path": "/"
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/EC2-Key-Pair-Manager-Policy/Resource"
      }
    },
    "EC2KeyPairManagerRoleB243C519": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Used by Lambda CFN-Resource-Custom-EC2-Key-Pair, which is a custom CFN resource, managing EC2 Key Pairs",
        "ManagedPolicyArns": [
          {
            "Ref": "EC2KeyPairManagerPolicyEBBC1576"
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "RoleName": "CdkAygoFinalStack-CFN-Resource-Custom-EC2-Key-Pair"
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/EC2-Key-Pair-Manager-Role/Resource"
      }
    },
    "EC2KeyNameManagerLambdaBE629145": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3BucketA216A7EC"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3VersionKeyC59C30A0"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3VersionKeyC59C30A0"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "EC2KeyPairManagerRoleB243C519",
            "Arn"
          ]
        },
        "Description": "Custom CFN resource: Manage EC2 Key Pairs",
        "FunctionName": "CdkAygoFinalStack-CFN-Resource-Custom-EC2-Key-Pair",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 180
      },
      "DependsOn": [
        "EC2KeyPairManagerRoleB243C519"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/EC2-Key-Name-Manager-Lambda/Resource",
        "aws:asset:path": "asset.afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2.zip",
        "aws:asset:original-path": "C:\\Users\\dtorres\\Documents\\otros\\Maestria Informatica\\Arquitectura y Gobernabilidad\\cdk_aygo_final\\node_modules\\cdk-ec2-key-pair\\lambda\\code.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "KeyPair2EC2KeyPaircdkkeypair2990674C7": {
      "Type": "Custom::EC2-Key-Pair",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "EC2KeyNameManagerLambdaBE629145",
            "Arn"
          ]
        },
        "Name": "cdk-keypair_2",
        "Description": "Key Pair created with CDK Deployment 2",
        "KmsPrivate": "alias/aws/secretsmanager",
        "KmsPublic": "alias/aws/secretsmanager",
        "StorePublicKey": false,
        "ExposePublicKey": false,
        "RemoveKeySecretsAfterDays": 0,
        "SecretPrefix": "ec2-ssh-key/",
        "StackName": "CdkAygoFinalStack",
        "Tags": {
          "CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/KeyPair_2/EC2-Key-Pair-cdk-keypair_2/Default"
      }
    },
    "KeyPair3EC2KeyPaircdkkeypair3AA7B0E5E": {
      "Type": "Custom::EC2-Key-Pair",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "EC2KeyNameManagerLambdaBE629145",
            "Arn"
          ]
        },
        "Name": "cdk-keypair_3",
        "Description": "Key Pair created with CDK Deployment 3",
        "KmsPrivate": "alias/aws/secretsmanager",
        "KmsPublic": "alias/aws/secretsmanager",
        "StorePublicKey": false,
        "ExposePublicKey": false,
        "RemoveKeySecretsAfterDays": 0,
        "SecretPrefix": "ec2-ssh-key/",
        "StackName": "CdkAygoFinalStack",
        "Tags": {
          "CreatedByCfnCustomResource": "CFN::Resource::Custom::EC2-Key-Pair"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/KeyPair_3/EC2-Key-Pair-cdk-keypair_3/Default"
      }
    },
    "SecurityGroupDD263621": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH (TCP port 22) and HTTP (TCP port 80) in",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow SSH Access",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTP Access",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTP Access",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432
          }
        ],
        "VpcId": "vpc-08c47f716739e9be3"
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/SecurityGroup/Resource"
      }
    },
    "ec2Role38AB65C0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/ec2Role/Resource"
      }
    },
    "InstanceInstanceProfileAB5AEF02": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ec2Role38AB65C0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/Instance/InstanceProfile"
      }
    },
    "InstanceC1063A87": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "IamInstanceProfile": {
          "Ref": "InstanceInstanceProfileAB5AEF02"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "KeyName": {
          "Fn::GetAtt": [
            "KeyPairEC2KeyPaircdkkeypairA709CCF7",
            "KeyPairName"
          ]
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SecurityGroupDD263621",
              "GroupId"
            ]
          }
        ],
        "SubnetId": "subnet-0613017640fb9af39",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAygoFinalStack/Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nyum update -y\nyum install docker -y\nservice docker start\nsudo docker run -d -p 5432:5432 -e POSTGRES_USER=aygo_user -e POSTGRES_PASSWORD=aygo_password -e POSTGRES_DB=aygo -e PGDATA=/tmp --name pg postgres:9.6 "
        }
      },
      "DependsOn": [
        "ec2Role38AB65C0"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/Instance/Resource"
      }
    },
    "Instance2InstanceProfileA464540C": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ec2Role38AB65C0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/Instance_2/InstanceProfile"
      }
    },
    "Instance2EAAEADBE": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "IamInstanceProfile": {
          "Ref": "Instance2InstanceProfileA464540C"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "KeyName": {
          "Fn::GetAtt": [
            "KeyPair2EC2KeyPaircdkkeypair2990674C7",
            "KeyPairName"
          ]
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SecurityGroupDD263621",
              "GroupId"
            ]
          }
        ],
        "SubnetId": "subnet-0613017640fb9af39",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAygoFinalStack/Instance_2"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nyum update -y\nyum install docker -y\nservice docker start\nsudo docker run -d -p 80:8080 -e DB_HOST=",
                {
                  "Fn::GetAtt": [
                    "InstanceC1063A87",
                    "PublicIp"
                  ]
                },
                " -e DB_PORT=5432 -e DB_USER=aygo_user -e DB_PASS=aygo_password -e DB_NAME=aygo --name back 9410ger/projectaygogroup2 "
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ec2Role38AB65C0"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/Instance_2/Resource"
      }
    },
    "Instance3InstanceProfile21090B8D": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ec2Role38AB65C0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/Instance_3/InstanceProfile"
      }
    },
    "Instance3F860BE3C": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": "us-east-1a",
        "IamInstanceProfile": {
          "Ref": "Instance3InstanceProfile21090B8D"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "KeyName": {
          "Fn::GetAtt": [
            "KeyPair3EC2KeyPaircdkkeypair3AA7B0E5E",
            "KeyPairName"
          ]
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SecurityGroupDD263621",
              "GroupId"
            ]
          }
        ],
        "SubnetId": "subnet-0613017640fb9af39",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkAygoFinalStack/Instance_3"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nyum update -y\nyum install docker -y\nservice docker start\nsudo docker run -d -p 80:3000 -e REACT_APP_HOST_IP_ADDRESS=http://",
                {
                  "Fn::GetAtt": [
                    "Instance2EAAEADBE",
                    "PublicIp"
                  ]
                },
                " --name front legyorozun/front:latest"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ec2Role38AB65C0"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/Instance_3/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VQwU7DMAz9Fu5pRlfEGTZpiAOiKl9gXK/K2iRT7ICmqP9OQhlsB3yx35P93pNrnepmrW9vHuCTK+zHFfpAOr0J4Ki2kcXbjtjHgKS2e/c3e8cSIkphWwhgSSgU8BrlGGVWdXN3qZsW4V+BR2aSbDMYN/yjNqtynAxYnV7AwUB96yeDp7J1TXR+WvL99OesBw6pDX5vJprVBPa9B5120aEY78rSeZ4VNxWUPKy/Y2WsNxFHkg0wKcJ1/ghhDEZOT8HHY7m+Js6Gl+ZzLuV8T/rAq4/6XtdN/siBjalCdGIs6W7pX+bQZwuHAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "CdkAygoFinalStack/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3BucketA216A7EC": {
      "Type": "String",
      "Description": "S3 bucket for asset \"afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2\""
    },
    "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2S3VersionKeyC59C30A0": {
      "Type": "String",
      "Description": "S3 key for asset version \"afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2\""
    },
    "AssetParametersafe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2ArtifactHash3CBE2F36": {
      "Type": "String",
      "Description": "Artifact hash for asset \"afe67465ec62603d27d77795221a45e68423c87495467b0265ecdadad80bb5e2\""
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    }
  },
  "Outputs": {
    "IPAddress": {
      "Value": {
        "Fn::GetAtt": [
          "InstanceC1063A87",
          "PublicIp"
        ]
      }
    },
    "IPAddressback": {
      "Value": {
        "Fn::GetAtt": [
          "Instance2EAAEADBE",
          "PublicIp"
        ]
      }
    },
    "DownloadKeyCommand": {
      "Value": "aws secretsmanager get-secret-value --secret-id ec2-ssh-key/cdk-keypair/private --query SecretString --output text > cdk-key.pem && chmod 400 cdk-key.pem"
    },
    "sshcommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "ssh -i cdk-key.pem -o IdentitiesOnly=yes ec2-user@",
            {
              "Fn::GetAtt": [
                "InstanceC1063A87",
                "PublicIp"
              ]
            }
          ]
        ]
      }
    }
  }
}